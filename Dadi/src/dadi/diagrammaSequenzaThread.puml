@startuml
actor Utente
participant main
entity datiCondivisi
entity ThDado_1
entity ThDado_2
entity ThDado_3
entity ThVisualizza

Utente -> main ++ : new

main -> datiCondivisi ** : new
main -> ThVisualizza ** : new
main -> ThDado_1 ** : new
main -> ThDado_2 ** : new
main -> ThDado_3 ** : new

main -> Utente : messaggio
Utente -> main : inizio generazione

main -> ThVisualizza ++ : start
main -> ThDado_1 ++ : start
main -> ThDado_2 ++ : start
main -> ThDado_3 ++ : start

ThDado_1 -> datiCondivisi : datiCondivisi.setPrimoDado(num)
ThDado_2 -> datiCondivisi : datiCondivisi.setSecondoDado(num)
ThDado_3 -> datiCondivisi : datiCondivisi.setTerzoDado(num)
ThVisualizza -> datiCondivisi : datiCondivisi.visualizzaDadi()

Utente -> main : stop generazione

main -> datiCondivisi : datiCondivisi.waitSDado1()
main -> datiCondivisi : datiCondivisi.waitSDado2()
main -> datiCondivisi : datiCondivisi.waitSDado3()
main -> datiCondivisi : datiCondivisi.waitSVis()

ThDado_1 -> datiCondivisi : datiCondivisi.signalSDado1()
ThDado_1 -> main : return
deactivate ThDado_1

ThDado_2 -> datiCondivisi : datiCondivisi.signalSDado2()
ThDado_2 -> main : return
deactivate ThDado_2

ThDado_3 -> datiCondivisi : datiCondivisi.signalSDado3()
ThDado_3 -> main : return
deactivate ThDado_3

ThVisualizza -> datiCondivisi : datiCondivisi.signalSVis()
ThVisualizza -> main : return
deactivate ThVisualizza

main -> datiCondivisi : datiCondivisi.getPrimoDado()
main -> datiCondivisi : datiCondivisi.getPSecondoDado()
main -> datiCondivisi : datiCondivisi.getTerzoDado()

main -> Utente : messaggio vittoria o sconfitta

@endluml